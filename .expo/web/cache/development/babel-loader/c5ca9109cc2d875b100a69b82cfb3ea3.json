{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextField from \"../field\";\nimport Outline from \"../outline\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar OutlinedTextField = function (_TextField) {\n  _inherits(OutlinedTextField, _TextField);\n\n  var _super = _createSuper(OutlinedTextField);\n\n  function OutlinedTextField(props) {\n    var _this;\n\n    _classCallCheck(this, OutlinedTextField);\n\n    _this = _super.call(this, props);\n    _this.onTextLayout = _this.onTextLayout.bind(_assertThisInitialized(_this));\n    _this.state.labelWidth = new Animated.Value(0);\n    return _this;\n  }\n\n  _createClass(OutlinedTextField, [{\n    key: \"onTextLayout\",\n    value: function onTextLayout(_ref) {\n      var lines = _ref.nativeEvent.lines;\n      var _this$props = this.props,\n          fontSize = _this$props.fontSize,\n          labelFontSize = _this$props.labelFontSize;\n      var labelWidth = this.state.labelWidth;\n      var scale = labelFontSize / fontSize;\n      labelWidth.setValue(lines[0].width * scale);\n    }\n  }, {\n    key: \"renderLabel\",\n    value: function renderLabel(props) {\n      var onTextLayout = this.onTextLayout;\n      return _get(_getPrototypeOf(OutlinedTextField.prototype), \"renderLabel\", this).call(this, _objectSpread(_objectSpread({}, props), {}, {\n        onTextLayout: onTextLayout\n      }));\n    }\n  }, {\n    key: \"renderLine\",\n    value: function renderLine(props) {\n      var labelWidth = this.state.labelWidth;\n      return _jsx(Outline, _objectSpread(_objectSpread({}, props), {}, {\n        labelWidth: labelWidth\n      }));\n    }\n  }]);\n\n  return OutlinedTextField;\n}(TextField);\n\nOutlinedTextField.contentInset = _objectSpread(_objectSpread({}, TextField.contentInset), {}, {\n  input: 16,\n  top: 0,\n  left: 12,\n  right: 12\n});\nOutlinedTextField.labelOffset = _objectSpread(_objectSpread({}, TextField.labelOffset), {}, {\n  y0: 0,\n  y1: -10\n});\nOutlinedTextField.defaultProps = _objectSpread(_objectSpread({}, TextField.defaultProps), {}, {\n  lineWidth: 1,\n  disabledLineWidth: StyleSheet.hairlineWidth\n});\nexport { OutlinedTextField as default };","map":{"version":3,"sources":["/home/alonso/Documents/programming/GymBooking/node_modules/react-native-material-textfield/src/components/field-outlined/index.js"],"names":["React","TextField","Outline","OutlinedTextField","props","onTextLayout","bind","state","labelWidth","Animated","Value","lines","nativeEvent","fontSize","labelFontSize","scale","setValue","width","contentInset","input","top","left","right","labelOffset","y0","y1","defaultProps","lineWidth","disabledLineWidth","StyleSheet","hairlineWidth"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAGA,OAAOC,SAAP;AACA,OAAOC,OAAP;;;IAEqBC,iB;;;;;AAyBnB,6BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AAEA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,+BAApB;AACA,UAAKC,KAAL,CAAWC,UAAX,GAAwB,IAAIC,QAAQ,CAACC,KAAb,CAAmB,CAAnB,CAAxB;AAJiB;AAKlB;;;;WAED,4BAAyC;AAAA,UAAXC,KAAW,QAA1BC,WAA0B,CAAXD,KAAW;AACvC,wBAAkC,KAAKP,KAAvC;AAAA,UAAMS,QAAN,eAAMA,QAAN;AAAA,UAAgBC,aAAhB,eAAgBA,aAAhB;AACA,UAAMN,UAAN,GAAqB,KAAKD,KAA1B,CAAMC,UAAN;AAEA,UAAIO,KAAK,GAAGD,aAAa,GAAGD,QAA5B;AAEAL,MAAAA,UAAU,CAACQ,QAAX,CAAoBL,KAAK,CAAC,CAAD,CAAL,CAASM,KAAT,GAAiBF,KAArC;AACD;;;WAED,qBAAYX,KAAZ,EAAmB;AACjB,UAAMC,YAAN,GAAuB,IAAvB,CAAMA,YAAN;AAEA,gIAA8BD,KAA9B;AAAqCC,QAAAA,YAAY,EAAZA;AAArC;AACD;;;WAED,oBAAWD,KAAX,EAAkB;AAChB,UAAMI,UAAN,GAAqB,KAAKD,KAA1B,CAAMC,UAAN;AAEA,aACE,KAAC,OAAD,kCAAaJ,KAAb;AAAoB,QAAA,UAAU,EAAEI;AAAhC,SADF;AAGD;;;;EArD4CP,S;;AAA1BE,iB,CACZe,Y,mCACFjB,SAAS,CAACiB,Y;AAEbC,EAAAA,KAAK,EAAE,E;AAEPC,EAAAA,GAAG,EAAE,C;AACLC,EAAAA,IAAI,EAAE,E;AACNC,EAAAA,KAAK,EAAE;;AARUnB,iB,CAWZoB,W,mCACFtB,SAAS,CAACsB,W;AAEbC,EAAAA,EAAE,EAAE,C;AACJC,EAAAA,EAAE,EAAE,CAAC;;AAfYtB,iB,CAkBZuB,Y,mCACFzB,SAAS,CAACyB,Y;AAEbC,EAAAA,SAAS,EAAE,C;AACXC,EAAAA,iBAAiB,EAAEC,UAAU,CAACC;;SAtBb3B,iB","sourcesContent":["import React from 'react';\nimport { Animated, StyleSheet } from 'react-native';\n\nimport TextField from '../field';\nimport Outline from '../outline';\n\nexport default class OutlinedTextField extends TextField {\n  static contentInset = {\n    ...TextField.contentInset,\n\n    input: 16,\n\n    top: 0,\n    left: 12,\n    right: 12,\n  };\n\n  static labelOffset = {\n    ...TextField.labelOffset,\n\n    y0: 0,\n    y1: -10,\n  };\n\n  static defaultProps = {\n    ...TextField.defaultProps,\n\n    lineWidth: 1,\n    disabledLineWidth: StyleSheet.hairlineWidth,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.onTextLayout = this.onTextLayout.bind(this);\n    this.state.labelWidth = new Animated.Value(0);\n  }\n\n  onTextLayout({ nativeEvent: { lines } }) {\n    let { fontSize, labelFontSize } = this.props;\n    let { labelWidth } = this.state;\n\n    let scale = labelFontSize / fontSize;\n\n    labelWidth.setValue(lines[0].width * scale);\n  }\n\n  renderLabel(props) {\n    let { onTextLayout } = this;\n\n    return super.renderLabel({ ...props, onTextLayout });\n  }\n\n  renderLine(props) {\n    let { labelWidth } = this.state;\n\n    return (\n      <Outline {...props} labelWidth={labelWidth} />\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}