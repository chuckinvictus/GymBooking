{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport styles from \"./styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar Helper = function (_PureComponent) {\n  _inherits(Helper, _PureComponent);\n\n  var _super = _createSuper(Helper);\n\n  function Helper(props) {\n    var _this;\n\n    _classCallCheck(this, Helper);\n\n    _this = _super.call(this, props);\n    var _this$props = _this.props,\n        error = _this$props.error,\n        focusAnimation = _this$props.focusAnimation;\n    var opacity = focusAnimation.interpolate({\n      inputRange: [-1, -0.5, 0],\n      outputRange: [1, 0, 1],\n      extrapolate: 'clamp'\n    });\n    _this.state = {\n      errored: !!error,\n      opacity: opacity\n    };\n    return _this;\n  }\n\n  _createClass(Helper, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var focusAnimation = this.props.focusAnimation;\n      this.listener = focusAnimation.addListener(this.onAnimation.bind(this));\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var focusAnimation = this.props.focusAnimation;\n      focusAnimation.removeListener(this.listener);\n    }\n  }, {\n    key: \"onAnimation\",\n    value: function onAnimation(_ref) {\n      var value = _ref.value;\n\n      if (this.animationValue > -0.5 && value <= -0.5) {\n        this.setState({\n          errored: true\n        });\n      }\n\n      if (this.animationValue < -0.5 && value >= -0.5) {\n        this.setState({\n          errored: false\n        });\n      }\n\n      this.animationValue = value;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          errored = _this$state.errored,\n          opacity = _this$state.opacity;\n      var _this$props2 = this.props,\n          style = _this$props2.style,\n          title = _this$props2.title,\n          error = _this$props2.error,\n          disabled = _this$props2.disabled,\n          baseColor = _this$props2.baseColor,\n          errorColor = _this$props2.errorColor;\n      var text = errored ? error : title;\n\n      if (null == text) {\n        return null;\n      }\n\n      var textStyle = {\n        opacity: opacity,\n        color: !disabled && errored ? errorColor : baseColor\n      };\n      return _jsx(Animated.Text, {\n        style: [styles.text, style, textStyle],\n        children: text\n      });\n    }\n  }]);\n\n  return Helper;\n}(PureComponent);\n\nHelper.propTypes = {\n  title: PropTypes.string,\n  error: PropTypes.string,\n  disabled: PropTypes.bool,\n  style: Animated.Text.propTypes.style,\n  baseColor: PropTypes.string,\n  errorColor: PropTypes.string,\n  focusAnimation: PropTypes.instanceOf(Animated.Value)\n};\nexport { Helper as default };","map":{"version":3,"sources":["/home/alonso/Documents/programming/GymBooking/node_modules/react-native-material-textfield/src/components/helper/index.js"],"names":["PropTypes","React","PureComponent","styles","Helper","props","error","focusAnimation","opacity","interpolate","inputRange","outputRange","extrapolate","state","errored","listener","addListener","onAnimation","bind","removeListener","value","animationValue","setState","style","title","disabled","baseColor","errorColor","text","textStyle","color","propTypes","string","bool","Animated","Text","instanceOf","Value"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\nimport { Animated } from 'react-native';\n\nimport styles from './styles';\n\nexport default class Helper extends PureComponent {\n  static propTypes = {\n    title: PropTypes.string,\n    error: PropTypes.string,\n\n    disabled: PropTypes.bool,\n\n    style: Animated.Text.propTypes.style,\n\n    baseColor: PropTypes.string,\n    errorColor: PropTypes.string,\n\n    focusAnimation: PropTypes.instanceOf(Animated.Value),\n  };\n\n  constructor(props) {\n    super(props);\n\n    let { error, focusAnimation } = this.props;\n\n    let opacity = focusAnimation.interpolate({\n      inputRange: [-1, -0.5, 0],\n      outputRange: [1, 0, 1],\n      extrapolate: 'clamp',\n    });\n\n    this.state = {\n      errored: !!error,\n      opacity,\n    };\n  }\n\n  componentDidMount() {\n    let { focusAnimation } = this.props;\n\n    this.listener = focusAnimation\n      .addListener(this.onAnimation.bind(this));\n  }\n\n  componentWillUnmount() {\n    let { focusAnimation } = this.props;\n\n    focusAnimation.removeListener(this.listener);\n  }\n\n  onAnimation({ value }) {\n    if (this.animationValue > -0.5 && value <= -0.5) {\n      this.setState({ errored: true });\n    }\n\n    if (this.animationValue < -0.5 && value >= -0.5) {\n      this.setState({ errored: false });\n    }\n\n    this.animationValue = value;\n  }\n\n  render() {\n    let { errored, opacity } = this.state;\n    let {\n      style,\n      title,\n      error,\n      disabled,\n      baseColor,\n      errorColor,\n    } = this.props;\n\n    let text = errored?\n      error:\n      title;\n\n    if (null == text) {\n      return null;\n    }\n\n    let textStyle = {\n      opacity,\n\n      color: !disabled && errored?\n        errorColor:\n        baseColor,\n    };\n\n    return (\n      <Animated.Text style={[styles.text, style, textStyle]}>\n        {text}\n      </Animated.Text>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}