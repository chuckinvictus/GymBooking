{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { ViewPropTypes } from \"react-native-web/dist/index\";\nimport coalesceNonElementChildren from \"./coalesceNonElementChildren\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar systemButtonOpacity = 0.2;\n\nvar Button = function (_Component) {\n  _inherits(Button, _Component);\n\n  var _super = _createSuper(Button);\n\n  function Button() {\n    _classCallCheck(this, Button);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Button, [{\n    key: \"render\",\n    value: function render() {\n      var touchableProps = {\n        activeOpacity: this._computeActiveOpacity()\n      };\n      var containerStyle = [this.props.containerStyle, this.props.disabled ? this.props.disabledContainerStyle : null];\n\n      if (!this.props.disabled) {\n        touchableProps.onPress = this.props.onPress;\n        touchableProps.onPressIn = this.props.onPressIn;\n        touchableProps.onPressOut = this.props.onPressOut;\n        touchableProps.onLongPress = this.props.onLongPress;\n        touchableProps.delayPressIn = this.props.delayPressIn;\n        touchableProps.delayPressOut = this.props.delayPressOut;\n        touchableProps.delayLongPress = this.props.delayLongPress;\n      }\n\n      if (Platform.OS === 'ios') {\n        return _jsx(TouchableOpacity, _objectSpread(_objectSpread({}, touchableProps), {}, {\n          testID: this.props.testID,\n          style: containerStyle,\n          accessibilityLabel: this.props.accessibilityLabel,\n          accessibilityRole: \"button\",\n          children: this._renderGroupedChildren()\n        }));\n      } else {\n        var background = this.props.androidBackground ? this.props.androidBackground : TouchableNativeFeedback.SelectableBackground();\n        var padding = 0;\n\n        if (containerStyle[0] && containerStyle[0].padding) {\n          padding = containerStyle[0].padding;\n\n          var fixedStyle = _extends({}, containerStyle[0], {\n            padding: 0\n          });\n\n          containerStyle[0] = fixedStyle;\n        }\n\n        return _jsx(View, {\n          style: containerStyle,\n          children: _jsx(TouchableNativeFeedback, _objectSpread(_objectSpread({}, touchableProps), {}, {\n            style: {\n              flex: 1\n            },\n            testID: this.props.testID,\n            accessibilityLabel: this.props.accessibilityLabel,\n            accessibilityRole: \"button\",\n            background: background,\n            children: _jsx(View, {\n              style: {\n                padding: padding\n              },\n              children: this._renderGroupedChildren()\n            })\n          }))\n        });\n      }\n    }\n  }, {\n    key: \"_renderGroupedChildren\",\n    value: function _renderGroupedChildren() {\n      var _this = this;\n\n      var disabled = this.props.disabled;\n      var style = [styles.text, disabled ? styles.disabledText : null, this.props.style, disabled ? this.props.styleDisabled : null];\n      var childGroupStyle = [styles.group, this.props.childGroupStyle];\n      var children = coalesceNonElementChildren(this.props.children, function (children, index) {\n        return _jsx(Text, {\n          style: style,\n          allowFontScaling: _this.props.allowFontScaling,\n          children: children\n        }, index);\n      });\n\n      switch (children.length) {\n        case 0:\n          return null;\n\n        case 1:\n          return children[0];\n\n        default:\n          return _jsx(View, {\n            style: childGroupStyle,\n            children: children\n          });\n      }\n    }\n  }, {\n    key: \"_computeActiveOpacity\",\n    value: function _computeActiveOpacity() {\n      if (this.props.disabled) {\n        return 1;\n      }\n\n      return this.props.activeOpacity != null ? this.props.activeOpacity : systemButtonOpacity;\n    }\n  }]);\n\n  return Button;\n}(Component);\n\nButton.propTypes = _objectSpread(_objectSpread({}, TouchableOpacity.propTypes), {}, {\n  accessibilityLabel: PropTypes.string,\n  allowFontScaling: Text.propTypes.allowFontScaling,\n  containerStyle: ViewPropTypes.style,\n  disabledContainerStyle: ViewPropTypes.style,\n  disabled: PropTypes.bool,\n  style: Text.propTypes.style,\n  styleDisabled: Text.propTypes.style,\n  childGroupStyle: ViewPropTypes.style,\n  androidBackground: PropTypes.object\n});\nexport { Button as default };\n;\nvar styles = StyleSheet.create({\n  text: {\n    color: '#007aff',\n    fontSize: 17,\n    fontWeight: '500',\n    textAlign: 'center'\n  },\n  disabledText: {\n    color: '#dcdcdc'\n  },\n  group: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  }\n});","map":{"version":3,"sources":["/home/alonso/Documents/programming/GymBooking/node_modules/react-native-button/Button.js"],"names":["PropTypes","React","Component","ViewPropTypes","coalesceNonElementChildren","systemButtonOpacity","Button","touchableProps","activeOpacity","_computeActiveOpacity","containerStyle","props","disabled","disabledContainerStyle","onPress","onPressIn","onPressOut","onLongPress","delayPressIn","delayPressOut","delayLongPress","Platform","OS","testID","accessibilityLabel","_renderGroupedChildren","background","androidBackground","TouchableNativeFeedback","SelectableBackground","padding","fixedStyle","flex","style","styles","text","disabledText","styleDisabled","childGroupStyle","group","children","index","allowFontScaling","length","propTypes","TouchableOpacity","string","Text","bool","object","StyleSheet","create","color","fontSize","fontWeight","textAlign","flexDirection","justifyContent","alignItems"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport {\n  Platform,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  TouchableNativeFeedback,\n  View,\n  ViewPropTypes\n} from 'react-native';\n\nimport coalesceNonElementChildren from './coalesceNonElementChildren';\n\nconst systemButtonOpacity = 0.2;\n\nexport default class Button extends Component {\n  static propTypes = {\n    ...TouchableOpacity.propTypes,\n    accessibilityLabel: PropTypes.string,\n    allowFontScaling: Text.propTypes.allowFontScaling,\n    containerStyle: ViewPropTypes.style,\n    disabledContainerStyle: ViewPropTypes.style,\n    disabled: PropTypes.bool,\n    style: Text.propTypes.style,\n    styleDisabled: Text.propTypes.style,\n    childGroupStyle: ViewPropTypes.style,\n    androidBackground: PropTypes.object,\n  };\n\n  render() {\n    let touchableProps = {\n      activeOpacity: this._computeActiveOpacity(),\n    };\n    let containerStyle = [\n      this.props.containerStyle,\n      this.props.disabled ? this.props.disabledContainerStyle : null\n    ];\n\n    if (!this.props.disabled) {\n      touchableProps.onPress = this.props.onPress;\n      touchableProps.onPressIn = this.props.onPressIn;\n      touchableProps.onPressOut = this.props.onPressOut;\n      touchableProps.onLongPress = this.props.onLongPress;\n      touchableProps.delayPressIn = this.props.delayPressIn;\n      touchableProps.delayPressOut = this.props.delayPressOut;\n      touchableProps.delayLongPress = this.props.delayLongPress;\n    }\n\n    if (Platform.OS === 'ios') {\n      return (\n        <TouchableOpacity\n          {...touchableProps}\n          testID={this.props.testID}\n          style={containerStyle}\n          accessibilityLabel={this.props.accessibilityLabel}\n          accessibilityRole=\"button\">\n          {this._renderGroupedChildren()}\n        </TouchableOpacity>\n      );\n    } else {\n      const background = this.props.androidBackground\n        ? this.props.androidBackground\n        : TouchableNativeFeedback.SelectableBackground();\n\n      let padding = 0;\n      if (containerStyle[0] && containerStyle[0].padding) {\n        padding = containerStyle[0].padding;\n        const fixedStyle = Object.assign({}, containerStyle[0], {padding: 0});\n        containerStyle[0] = fixedStyle;\n      }\n\n      return (\n        <View style={containerStyle}>\n          <TouchableNativeFeedback\n            {...touchableProps}\n            style={{flex: 1}}\n            testID={this.props.testID}\n            accessibilityLabel={this.props.accessibilityLabel}\n            accessibilityRole=\"button\"\n            background={background}>\n            <View style={{padding: padding}}>\n              {this._renderGroupedChildren()}\n            </View>\n          </TouchableNativeFeedback>\n        </View>\n      );\n    }\n  }\n\n  _renderGroupedChildren() {\n    let { disabled } = this.props;\n    let style = [\n      styles.text,\n      disabled ? styles.disabledText : null,\n      this.props.style,\n      disabled ? this.props.styleDisabled : null,\n    ];\n    let childGroupStyle = [\n      styles.group,\n      this.props.childGroupStyle,\n    ];\n\n    let children = coalesceNonElementChildren(this.props.children, (children, index) => {\n      return (\n        <Text key={index} style={style} allowFontScaling={this.props.allowFontScaling}>\n          {children}\n        </Text>\n      );\n    });\n\n    switch (children.length) {\n      case 0:\n        return null;\n      case 1:\n        return children[0];\n      default:\n        return <View style={childGroupStyle}>{children}</View>;\n    }\n  }\n\n  _computeActiveOpacity() {\n    if (this.props.disabled) {\n      return 1;\n    }\n    return this.props.activeOpacity != null ?\n      this.props.activeOpacity :\n      systemButtonOpacity;\n  }\n};\n\nconst styles = StyleSheet.create({\n  text: {\n    color: '#007aff',\n    fontSize: 17,\n    fontWeight: '500',\n    textAlign: 'center',\n  },\n  disabledText: {\n    color: '#dcdcdc',\n  },\n  group: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}