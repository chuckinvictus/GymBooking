{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport styles from \"./styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar Affix = function (_PureComponent) {\n  _inherits(Affix, _PureComponent);\n\n  var _super = _createSuper(Affix);\n\n  function Affix() {\n    _classCallCheck(this, Affix);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Affix, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          labelAnimation = _this$props.labelAnimation,\n          style = _this$props.style,\n          children = _this$props.children,\n          type = _this$props.type,\n          fontSize = _this$props.fontSize,\n          color = _this$props.color;\n      var containerStyle = {\n        height: fontSize * 1.5,\n        opacity: labelAnimation\n      };\n      var textStyle = {\n        includeFontPadding: false,\n        textAlignVertical: 'top',\n        fontSize: fontSize,\n        color: color\n      };\n\n      switch (type) {\n        case 'prefix':\n          containerStyle.paddingRight = 8;\n          textStyle.textAlign = 'left';\n          break;\n\n        case 'suffix':\n          containerStyle.paddingLeft = 8;\n          textStyle.textAlign = 'right';\n          break;\n      }\n\n      return _jsx(Animated.View, {\n        style: [styles.container, containerStyle],\n        children: _jsx(Animated.Text, {\n          style: [style, textStyle],\n          children: children\n        })\n      });\n    }\n  }]);\n\n  return Affix;\n}(PureComponent);\n\nAffix.defaultProps = {\n  numberOfLines: 1\n};\nAffix.propTypes = {\n  numberOfLines: PropTypes.number,\n  color: PropTypes.string.isRequired,\n  fontSize: PropTypes.number.isRequired,\n  type: PropTypes.oneOf(['prefix', 'suffix']).isRequired,\n  labelAnimation: PropTypes.instanceOf(Animated.Value).isRequired,\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node])\n};\nexport { Affix as default };","map":{"version":3,"sources":["/home/alonso/Documents/programming/GymBooking/node_modules/react-native-material-textfield/src/components/affix/index.js"],"names":["PropTypes","React","PureComponent","styles","Affix","props","labelAnimation","style","children","type","fontSize","color","containerStyle","height","opacity","textStyle","includeFontPadding","textAlignVertical","paddingRight","textAlign","paddingLeft","container","defaultProps","numberOfLines","propTypes","number","string","isRequired","oneOf","instanceOf","Animated","Value","oneOfType","arrayOf","node"],"mappings":";;;;;;;;;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;;AAGA,OAAOC,MAAP;;;IAEqBC,K;;;;;;;;;;;;;WA0BnB,kBAAS;AACP,wBAAiE,KAAKC,KAAtE;AAAA,UAAMC,cAAN,eAAMA,cAAN;AAAA,UAAsBC,KAAtB,eAAsBA,KAAtB;AAAA,UAA6BC,QAA7B,eAA6BA,QAA7B;AAAA,UAAuCC,IAAvC,eAAuCA,IAAvC;AAAA,UAA6CC,QAA7C,eAA6CA,QAA7C;AAAA,UAAuDC,KAAvD,eAAuDA,KAAvD;AAEA,UAAIC,cAAc,GAAG;AACnBC,QAAAA,MAAM,EAAEH,QAAQ,GAAG,GADA;AAEnBI,QAAAA,OAAO,EAAER;AAFU,OAArB;AAKA,UAAIS,SAAS,GAAG;AACdC,QAAAA,kBAAkB,EAAE,KADN;AAEdC,QAAAA,iBAAiB,EAAE,KAFL;AAIdP,QAAAA,QAAQ,EAARA,QAJc;AAKdC,QAAAA,KAAK,EAALA;AALc,OAAhB;;AAQA,cAAQF,IAAR;AACE,aAAK,QAAL;AACEG,UAAAA,cAAc,CAACM,YAAf,GAA8B,CAA9B;AACAH,UAAAA,SAAS,CAACI,SAAV,GAAsB,MAAtB;AACA;;AAEF,aAAK,QAAL;AACEP,UAAAA,cAAc,CAACQ,WAAf,GAA6B,CAA7B;AACAL,UAAAA,SAAS,CAACI,SAAV,GAAsB,OAAtB;AACA;AATJ;;AAYA,aACE,KAAC,QAAD,CAAU,IAAV;AAAe,QAAA,KAAK,EAAE,CAAChB,MAAM,CAACkB,SAAR,EAAmBT,cAAnB,CAAtB;AAAA,kBACE,KAAC,QAAD,CAAU,IAAV;AAAe,UAAA,KAAK,EAAE,CAACL,KAAD,EAAQQ,SAAR,CAAtB;AAAA,oBAA2CP;AAA3C;AADF,QADF;AAKD;;;;EA3DgCN,a;;AAAdE,K,CACZkB,Y,GAAe;AACpBC,EAAAA,aAAa,EAAE;AADK,C;AADHnB,K,CAKZoB,S,GAAY;AACjBD,EAAAA,aAAa,EAAEvB,SAAS,CAACyB,MADR;AAIjBd,EAAAA,KAAK,EAAEX,SAAS,CAAC0B,MAAV,CAAiBC,UAJP;AAKjBjB,EAAAA,QAAQ,EAAEV,SAAS,CAACyB,MAAV,CAAiBE,UALV;AAOjBlB,EAAAA,IAAI,EAAET,SAAS,CACZ4B,KADG,CACG,CAAC,QAAD,EAAW,QAAX,CADH,EAEHD,UATc;AAWjBrB,EAAAA,cAAc,EAAEN,SAAS,CACtB6B,UADa,CACFC,QAAQ,CAACC,KADP,EAEbJ,UAbc;AAejBnB,EAAAA,QAAQ,EAAER,SAAS,CAACgC,SAAV,CAAoB,CAC5BhC,SAAS,CAACiC,OAAV,CAAkBjC,SAAS,CAACkC,IAA5B,CAD4B,EAE5BlC,SAAS,CAACkC,IAFkB,CAApB;AAfO,C;SALA9B,K","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\nimport { Animated } from 'react-native';\n\nimport styles from './styles';\n\nexport default class Affix extends PureComponent {\n  static defaultProps = {\n    numberOfLines: 1,\n  };\n\n  static propTypes = {\n    numberOfLines: PropTypes.number,\n    // style: Animated.Text.propTypes.style,\n\n    color: PropTypes.string.isRequired,\n    fontSize: PropTypes.number.isRequired,\n\n    type: PropTypes\n      .oneOf(['prefix', 'suffix'])\n      .isRequired,\n\n    labelAnimation: PropTypes\n      .instanceOf(Animated.Value)\n      .isRequired,\n\n    children: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node,\n    ]),\n  };\n\n  render() {\n    let { labelAnimation, style, children, type, fontSize, color } = this.props;\n\n    let containerStyle = {\n      height: fontSize * 1.5,\n      opacity: labelAnimation,\n    };\n\n    let textStyle = {\n      includeFontPadding: false,\n      textAlignVertical: 'top',\n\n      fontSize,\n      color,\n    };\n\n    switch (type) {\n      case 'prefix':\n        containerStyle.paddingRight = 8;\n        textStyle.textAlign = 'left';\n        break;\n\n      case 'suffix':\n        containerStyle.paddingLeft = 8;\n        textStyle.textAlign = 'right';\n        break;\n    }\n\n    return (\n      <Animated.View style={[styles.container, containerStyle]}>\n        <Animated.Text style={[style, textStyle]}>{children}</Animated.Text>\n      </Animated.View>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}